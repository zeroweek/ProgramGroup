// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LPDefine.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LPDefine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace LPDefine {

namespace {

const ::google::protobuf::EnumDescriptor* e_MsgID_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_ResultCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_LPDefine_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_LPDefine_2eproto() {
  protobuf_AddDesc_LPDefine_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "LPDefine.proto");
  GOOGLE_CHECK(file != NULL);
  e_MsgID_descriptor_ = file->enum_type(0);
  e_ResultCode_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_LPDefine_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_LPDefine_2eproto() {
}

void protobuf_AddDesc_LPDefine_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_LPDefine_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016LPDefine.proto\022\010LPDefine*\231\001\n\007e_MsgID\022\r"
    "\n\tmsg_begin\020\001\022\034\n\027msg_req_server_register"
    "\020\351\007\022\034\n\027msg_ack_server_register\020\352\007\022\031\n\024msg"
    "_req_client_login\020\321\017\022\031\n\024msg_ack_client_l"
    "ogin\020\322\017\022\r\n\007msg_end\020\377\377\003*/\n\014e_ResultCode\022\016"
    "\n\neRstUnknow\020\000\022\017\n\013eRstSuccess\020\001", 231);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LPDefine.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_LPDefine_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_LPDefine_2eproto {
  StaticDescriptorInitializer_LPDefine_2eproto() {
    protobuf_AddDesc_LPDefine_2eproto();
  }
} static_descriptor_initializer_LPDefine_2eproto_;
const ::google::protobuf::EnumDescriptor* e_MsgID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_MsgID_descriptor_;
}
bool e_MsgID_IsValid(int value) {
  switch(value) {
    case 1:
    case 1001:
    case 1002:
    case 2001:
    case 2002:
    case 65535:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_ResultCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_ResultCode_descriptor_;
}
bool e_ResultCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace LPDefine

// @@protoc_insertion_point(global_scope)
